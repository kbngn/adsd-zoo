name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Zoo/Dockerfile
          push: true
          tags: jarik01/zoo:latest
          
  security_scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        name: Scan for security vulnerabilities
        run: |
          # Use OWASP Dependency-Check or SonarQube with security plugins to scan for vulnerabilities
          # Example: Run OWASP Dependency-Check against dependencies
      # Add more steps as needed for security scanning and reporting
          
  post_deployment_verification:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        name: Perform smoke tests
        run: |
          # Run smoke tests against the deployed application
          # Example: curl or send HTTP requests to check basic functionality
      -
        name: Monitor application logs and metrics
        run: |
          # Monitor application logs and metrics for any errors or anomalies
          # Example: Use log monitoring tools or custom scripts to analyze logs
          
  unit_test:
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Test
        run: dotnet test --no-build --configuration Release

      - name: Publish
        run: dotnet publish --no-build --configuration Release --output ./publish
